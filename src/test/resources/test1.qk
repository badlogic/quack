// single line comment

/*
 Multiline comment
*/
module test.mod

import other.mod.name // inline comment
import another.mod.name /** inline multiline
*/

def fun() {
}

def fun(a: i32, b: i32, c: i32) {
}

def fun(a: i32, b: i32, c: i32): i32 {
}

struct Empty {
}

struct Vals {
	val a: i32
	var b: i32
	static var c: i32
}

struct Vals {
	def Vals(a: i32, i:a) {
	}
	
	def vals(): i32 {
	}
}

def fib(n: i32): i32 {
	if (n < 2) {
		return n
	} else {
		return fib(n-1)+fib(n-2)
	}
}

def test() {
	if(1) {
	}
	
	if(2) {
	} else {
	}
	
	if(3) {
	} elif(19) {
	} elif(20) {
	}
	
	if(4) {
	} elif(5) {
	} elif(6) {
	} else {
	}
	
	if(7) {
		if(8) {
			if(9) {
			}
		} elif(10) {
		} else {
		}
	} else {
	}
}

def test() {
	while(0) {
	}
}

def test() {
	for(val i: i32, val j: i32; i < 0; i=i+1, j=j+1) {
	}
}

def test() {
	return
}

def test(): i32 {
	return 0
}

def test() {
	val i: i32
	var j: MyType
	
	i = 0
	j = 10
	
	a + -b * 2 / 2 % 2 - 10 << 2 + 2 >> 1
	
	a && b || !c
	
	test(a, b, c)
	
	a.b.c[10](a, b, c).field = 10
}
